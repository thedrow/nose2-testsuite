(dp0
S'tests'
p1
(dp2
S'tests.unit.test_registry.A Modules Registry.test 0006: should have exactly zero registered states when unregistering only once'
p3
I10
sS'tests.unit.test_registry.A Modules Registry.test 0001: should raise a TypeError when attempting to register anything else other then a dictionary'
p4
I5
sS'tests.unit.test_registry.A Modules Registry.test 0005: should unregister when a state was registered before'
p5
I9
sS'tests.unit.test_registry.A Modules Registry.test 0002: should have exactly one registered state when registering only once'
p6
I6
sS"tests.unit.test_layers.A Integration Tests Layer.test 0000: should have 'Integration Tests Layer:' as the description"
p7
I2
sS'tests.unit.test_registry.A Modules Registry.test 0004: should raise an IndexError when unregistering from an empty modules registry'
p8
I8
sS"tests.unit.test_layers.A Functional Tests Layer.test 0000: should have 'Functional Tests Layer:' as the description"
p9
I3
sS'tests.unit.test_registry.A Modules Registry.test 0003: should have the same registered state when registering only once'
p10
I7
sS"tests.unit.test_layers.A Unit Tests Layer.test 0000: should have 'Unit Tests Layer:' as the description"
p11
I1
sS'tests.unit.test_registry.A Modules Registry.test 0000: should have nothing registered when initialized'
p12
I4
sS'tests.unit.test_registry.A Modules Registry.test 0007: should register the current state of the system modules'
p13
I11
ssS'ids'
p14
(dp15
I1
g11
sI2
g7
sI3
g9
sI4
g12
sI5
g4
sI6
g6
sI7
g10
sI8
g8
sI9
g5
sI10
g3
sI11
g13
ss.