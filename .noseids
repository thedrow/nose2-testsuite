(dp0
S'tests'
p1
(dp2
S'tests.unit.test_registry.A Modules Registry.test 0002: should have the same registered state when registering only once'
p3
I6
sS'tests.unit.test_registry.A Modules Registry.test 0004: should unregister when a state was registered before'
p4
I8
sS'tests.unit.test_registry.A Modules Registry.test 0006: should register the current state of the system modules'
p5
I10
sS'tests.unit.test_registry.A Modules Registry.test 0001: should have exactly one registered state when registering only once'
p6
I5
sS'tests.unit.test_registry.A Modules Registry.test 0005: should have exactly zero registered states when unregistering only once'
p7
I9
sS"tests.unit.test_layers.A Integration Tests Layer.test 0000: should have 'Integration Tests Layer:' as the description"
p8
I2
sS"tests.unit.test_layers.A Functional Tests Layer.test 0000: should have 'Functional Tests Layer:' as the description"
p9
I1
sS"tests.unit.test_layers.A Unit Tests Layer.test 0000: should have 'Unit Tests Layer:' as the description"
p10
I3
sS'tests.unit.test_registry.A Modules Registry.test 0000: should have nothing registered when initialized'
p11
I4
sS'tests.unit.test_registry.A Modules Registry.test 0003: should raise an IndexError when unregistering from an empty modules registry'
p12
I7
ssS'ids'
p13
(dp14
I1
g9
sI2
g8
sI3
g10
sI4
g11
sI5
g6
sI6
g3
sI7
g12
sI8
g4
sI9
g7
sI10
g5
ss.